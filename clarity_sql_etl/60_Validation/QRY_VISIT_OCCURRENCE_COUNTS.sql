/*******************************************************************************
Script Name: Visit_Occurrence_Counts.sql
Author: Roger J Carlson - Corewell Health
Date: June 2025
********************************************************************************/

-- Common Table Expressions (CTEs)

--OMOP_CS.COUNT_CONDITIONS
with __dbt__cte__COUNT_CONDITIONS as (
SELECT
    VISIT_OCCURRENCE_ID
    , COUNT(CONDITION_OCCURRENCE.PERSON_ID) AS COUNTOFCONDITION
    , CONDITION_OCCURRENCE.PERSON_ID
FROM CARE_RES_OMOP_DEV2_WKSP.OMOP.CONDITION_OCCURRENCE AS  CONDITION_OCCURRENCE
GROUP BY CONDITION_OCCURRENCE.VISIT_OCCURRENCE_ID
    , CONDITION_OCCURRENCE.PERSON_ID
),

-- OMOP_CS.COUNT_PROCEDURE
__dbt__cte__COUNT_PROCEDURE as (
SELECT
    PROCEDURE_OCCURRENCE.VISIT_OCCURRENCE_ID
    , COUNT(PROCEDURE_OCCURRENCE.PERSON_ID) AS COUNTOFPROCEDURE
    , PROCEDURE_OCCURRENCE.PERSON_ID
FROM
    CARE_RES_OMOP_DEV2_WKSP.OMOP.PROCEDURE_OCCURRENCE AS PROCEDURE_OCCURRENCE
GROUP BY
    PROCEDURE_OCCURRENCE.VISIT_OCCURRENCE_ID
    , PROCEDURE_OCCURRENCE.PERSON_ID
),

--OMOP_CS.COUNT_MEASUREMENT
__dbt__cte__COUNT_MEASUREMENT as (
SELECT MEASUREMENT.VISIT_OCCURRENCE_ID
    , COUNT(MEASUREMENT.PERSON_ID) AS COUNTOFMEASUREMENT
    , MEASUREMENT.PERSON_ID
FROM CARE_RES_OMOP_DEV2_WKSP.OMOP.MEASUREMENT AS MEASUREMENT
GROUP BY MEASUREMENT.VISIT_OCCURRENCE_ID
    , MEASUREMENT.PERSON_ID
),

-- OMOP_QA.COUNT_DRUG
__dbt__cte__COUNT_DRUG as (
SELECT DRUG_EXPOSURE.VISIT_OCCURRENCE_ID
    , COUNT(DRUG_EXPOSURE.PERSON_ID) AS COUNTOFDRUG
    , DRUG_EXPOSURE.PERSON_ID
FROM CARE_RES_OMOP_DEV2_WKSP.OMOP.DRUG_EXPOSURE AS DRUG_EXPOSURE

GROUP BY DRUG_EXPOSURE.VISIT_OCCURRENCE_ID
    , DRUG_EXPOSURE.PERSON_ID
),

-- OMOP_CS.COUNT_OBSERVATION
__dbt__cte__COUNT_OBSERVATION as (
SELECT
    OBSERVATION.VISIT_OCCURRENCE_ID
    , COUNT(OBSERVATION.PERSON_ID) AS COUNTOFOBSERVATION
    , OBSERVATION.PERSON_ID
FROM
    CARE_RES_OMOP_DEV2_WKSP.OMOP.OBSERVATION AS OBSERVATION
GROUP BY
    OBSERVATION.VISIT_OCCURRENCE_ID
    , OBSERVATION.PERSON_ID
),

--OMOP_CS.COUNT_DEVICE
__dbt__cte__COUNT_DEVICE as (
SELECT DEVICE_EXPOSURE.VISIT_OCCURRENCE_ID
    , COUNT(DEVICE_EXPOSURE.PERSON_ID) AS COUNTOFDEVICE
    , DEVICE_EXPOSURE.PERSON_ID
FROM CARE_RES_OMOP_DEV2_WKSP.OMOP.DEVICE_EXPOSURE AS DEVICE_EXPOSURE
GROUP BY DEVICE_EXPOSURE.VISIT_OCCURRENCE_ID
    , DEVICE_EXPOSURE.PERSON_ID
),

--OMOP_CS.COUNT_NOTE
__dbt__cte__COUNT_NOTE as (
SELECT NOTE.VISIT_OCCURRENCE_ID
    , COUNT(NOTE.PERSON_ID) AS COUNTOFNOTE
    , NOTE.PERSON_ID
FROM CARE_RES_OMOP_DEV2_WKSP.OMOP.NOTE AS NOTE
GROUP BY NOTE.VISIT_OCCURRENCE_ID
    , NOTE.PERSON_ID
),

-- OMOP_CS.COUNT_VISIT_DETAIL
__dbt__cte__COUNT_VISIT_DETAIL as (
SELECT
    VISIT_DETAIL.VISIT_OCCURRENCE_ID
    , COUNT(VISIT_DETAIL.PERSON_ID) AS COUNTOFVISITDETAIL
    , VISIT_DETAIL.PERSON_ID
FROM
    CARE_RES_OMOP_DEV2_WKSP.OMOP.VISIT_DETAIL AS VISIT_DETAIL
GROUP BY
    VISIT_DETAIL.VISIT_OCCURRENCE_ID
    , VISIT_DETAIL.PERSON_ID
)
-- Main Query
-- OMOP_CS.QRY_VISIT_OCCURRENCE_COUNTS
SELECT
    QRY_VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID
    , QRY_VISIT_OCCURRENCE.PERSON_ID
    , COALESCE(COUNTOFCONDITION   , 0) AS C
    , COALESCE(COUNTOFPROCEDURE   , 0) AS P
    , COALESCE(COUNTOFMEASUREMENT , 0) AS M
    , COALESCE(COUNTOFDRUG        , 0) AS RX
    , COALESCE(COUNTOFOBSERVATION , 0) AS O
    , COALESCE(COUNTOFDEVICE      , 0) AS D
    , COALESCE(COUNTOFNOTE        , 0) AS N
    , COALESCE(COUNTOFVISITDETAIL , 0) AS VD
    , QRY_VISIT_OCCURRENCE.VISIT_START_DATETIME
    , QRY_VISIT_OCCURRENCE.VISIT_END_DATETIME
    , QRY_VISIT_OCCURRENCE.VISIT_TYPE
    , QRY_VISIT_OCCURRENCE.PROVIDER
    , QRY_VISIT_OCCURRENCE.CARE_SITE
    , QRY_VISIT_OCCURRENCE.VISIT
    , QRY_VISIT_OCCURRENCE.ADMITTING_SOURCE
    , QRY_VISIT_OCCURRENCE.ADMITTED_FROM_SOURCE_VALUE
    , QRY_VISIT_OCCURRENCE.ADMITTED_FROM_CONCEPT_ID
    , QRY_VISIT_OCCURRENCE.DISCHARGE
    , QRY_VISIT_OCCURRENCE.DISCHARGED_TO_SOURCE_VALUE
    , QRY_VISIT_OCCURRENCE.VISIT_SOURCE_CONCEPT_ID
    , QRY_VISIT_OCCURRENCE.DISCHARGED_TO_CONCEPT_ID
    , QRY_VISIT_OCCURRENCE.PRECEDING_VISIT_OCCURRENCE_ID
    , QRY_VISIT_OCCURRENCE.SDT_TAB
    , QRY_VISIT_OCCURRENCE.NK
    , QRY_VISIT_OCCURRENCE.ETL_MODULE
    , QRY_VISIT_OCCURRENCE.PHI_PAT_ID
    , QRY_VISIT_OCCURRENCE.PHI_MRN_CPI
    , QRY_VISIT_OCCURRENCE.PHI_CSN_ID
FROM
    ((((((CARE_RES_OMOP_DEV2_WKSP.OMOP_CS.QRY_VISIT_OCCURRENCE AS QRY_VISIT_OCCURRENCE
LEFT JOIN __dbt__cte__COUNT_CONDITIONS AS COUNT_CONDITIONS ON
    QRY_VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID = COUNT_CONDITIONS.VISIT_OCCURRENCE_ID)
LEFT JOIN __dbt__cte__COUNT_PROCEDURE AS COUNT_PROCEDURE ON
    QRY_VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID = COUNT_PROCEDURE.VISIT_OCCURRENCE_ID)
LEFT JOIN __dbt__cte__COUNT_MEASUREMENT AS COUNT_MEASUREMENT ON
    QRY_VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID = COUNT_MEASUREMENT.VISIT_OCCURRENCE_ID)
LEFT JOIN __dbt__cte__COUNT_DRUG AS COUNT_DRUG ON
    QRY_VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID = COUNT_DRUG.VISIT_OCCURRENCE_ID)
LEFT JOIN __dbt__cte__COUNT_OBSERVATION AS COUNT_OBSERVATION ON
    QRY_VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID = COUNT_OBSERVATION.VISIT_OCCURRENCE_ID)
LEFT JOIN __dbt__cte__COUNT_DEVICE AS COUNT_DEVICE ON
    QRY_VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID = COUNT_DEVICE.VISIT_OCCURRENCE_ID)
LEFT JOIN __dbt__cte__COUNT_NOTE AS COUNT_NOTE ON
    QRY_VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID = COUNT_NOTE.VISIT_OCCURRENCE_ID
LEFT JOIN __dbt__cte__COUNT_VISIT_DETAIL AS COUNT_VISIT_DETAIL ON
    QRY_VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID = COUNT_VISIT_DETAIL.VISIT_OCCURRENCE_ID
ORDER BY
    QRY_VISIT_OCCURRENCE.VISIT_START_DATETIME DESC


/*******************************************************************************
COLUMN DESCRIPTIONS:
- C: Count of conditions per visit
- P: Count of procedures per visit
- M: Count of measurements per visit
- RX: Count of drug exposures per visit
- O: Count of observations per visit
- D: Count of device exposures per visit
- N: Count of notes per visit
- VD: Count of visit details per visit

LOGIC:
1. Creates separate counts for each domain (conditions, procedures, etc.) by visit
2. Joins all counts to visit occurrence data
3. Coalesces null counts to zero
4. Orders results by visit start date descending

LEGAL WARNING:
This code is provided "AS IS" without warranty of any kind, either express or
implied, including without limitation any implied warranties of condition,
uninterrupted use, merchantability, fitness for a particular purpose, or
non-infringement. Use at your own risk.
*******************************************************************************/
