--QA_CARE_SITE_NON_STANDARD_COUNT
---------------------------------------------------------------------
{# --{{ config(materialized = 'view') }} #}

WITH CTE_NON_STANDARD_COUNT AS
(
	SELECT CAST(GETDATE()AS DATE) AS RUN_DATE
		,'CARE_SITE' AS  STANDARD_DATA_TABLE
		,'NON-STANDARD' AS  QA_METRIC
		,'PLACE_OF_SERVICE_CONCEPT_ID'  AS METRIC_FIELD
		,'INVALID DATA' AS ERROR_TYPE
		,COUNT(*) AS CNT
		,(SELECT COUNT(*) AS NUM_ROWS FROM {{ref('CARE_SITE_RAW')}}) AS TOTAL_RECORDS
		,(SELECT COUNT(*) AS NUM_ROWS FROM {{ref('CARE_SITE')}}) AS TOTAL_RECORDS_CLEAN
    FROM
       {{ref('CARE_SITE_RAW')}} AS P
    LEFT JOIN
       {{ref('CONCEPT_stg')}} AS  C
        ON P.PLACE_OF_SERVICE_CONCEPT_ID =C.CONCEPT_ID AND upper(C.DOMAIN_ID) =  'PLACE OF SERVICE'
	WHERE  PLACE_OF_SERVICE_CONCEPT_ID  <> 0 AND STANDARD_CONCEPT <>'S'
)

SELECT  RUN_DATE, STANDARD_DATA_TABLE, QA_METRIC, METRIC_FIELD
	, COALESCE(SUM(CNT),0) AS QA_ERRORS
	, CASE WHEN SUM(CNT) <> 0 THEN ERROR_TYPE ELSE NULL END AS ERROR_TYPE
	,TOTAL_RECORDS
	,TOTAL_RECORDS_CLEAN
FROM CTE_NON_STANDARD_COUNT
GROUP BY RUN_DATE,  STANDARD_DATA_TABLE , METRIC_FIELD,  QA_METRIC ,  ERROR_TYPE ,TOTAL_RECORDS, TOTAL_RECORDS_CLEAN
