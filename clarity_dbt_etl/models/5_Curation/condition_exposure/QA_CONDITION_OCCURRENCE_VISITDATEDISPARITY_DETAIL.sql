
--QA_CONDITION_OCCURRENCE_VISITDATEDISPARITY_DETAIL
---------------------------------------------------------------------

{# --{{ config(materialized = 'view') }} #}

WITH VISITDATEDISPARITY_DETAIL AS (
SELECT 'CONDITION_START_DATE' AS METRIC_FIELD, 'VISIT_DATE_DISPARITY' AS QA_METRIC, 'WARNING' AS ERROR_TYPE, CONDITION_OCCURRENCE_ID AS CDT_ID
FROM {{ref('CONDITION_OCCURRENCE_RAW')}} AS  CO
LEFT JOIN {{ref('VISIT_OCCURRENCE_RAW')}}  VO
	ON CO.VISIT_OCCURRENCE_ID = VO.VISIT_OCCURRENCE_ID
WHERE
	-- MUST HAVE POPULATED VISIT OCCURRENCE ID
	(	CO.VISIT_OCCURRENCE_ID IS NOT NULL
		AND CO.VISIT_OCCURRENCE_ID <> 0
		AND VO.VISIT_OCCURRENCE_ID IS NOT NULL
		AND VO.VISIT_OCCURRENCE_ID <> 0	)
	AND (
		-- PROBLEM WITH PROCEDURE DATE
		(	CO.CONDITION_START_DATE < VO.VISIT_START_DATE
			OR CO.CONDITION_START_DATE > VO.VISIT_END_DATE)
		OR
		-- PROBLEM WITH DATETIME
		(	CAST(CO.CONDITION_START_DATETIME AS DATE) < CAST(VO.VISIT_START_DATETIME AS DATE)
			OR CAST(CO.CONDITION_START_DATETIME AS DATE) > CAST(VO.VISIT_END_DATETIME AS DATE))
		OR
		-- PROBLEM WITH THE DATETIME (EXTRACTING DATE FOR COMPARISON)
		(	CO.CONDITION_START_DATE < CAST(VO.VISIT_START_DATETIME AS DATE)
			OR CO.CONDITION_START_DATE > CAST(VO.VISIT_END_DATETIME AS DATE))
		OR
		--PROBLEM WITH THE DATETIME
		(	CAST(CO.CONDITION_START_DATETIME AS DATE) < VO.VISIT_START_DATE
			OR CAST(CO.CONDITION_START_DATETIME AS DATE) > VO.VISIT_END_DATE))
)

SELECT CAST(GETDATE() AS DATE) AS RUN_DATE
	,'CONDITION_OCCURRENCE' AS STANDARD_DATA_TABLE
	, QA_METRIC AS QA_METRIC
	, METRIC_FIELD  AS METRIC_FIELD
	, ERROR_TYPE
	, CDT_ID
FROM VISITDATEDISPARITY_DETAIL
