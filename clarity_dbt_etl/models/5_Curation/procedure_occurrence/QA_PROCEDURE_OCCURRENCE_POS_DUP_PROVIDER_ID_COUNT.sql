--QA_PROCEDURE_OCCURRENCE_POS_DUP_PROVIDER_ID_COUNT
---------------------------------------------------------------------

{# --{{ config(materialized = 'view') }} #}

WITH TMP_DUPES AS (
SELECT PERSON_ID
	,PROCEDURE_CONCEPT_ID
	-- ,PROCEDURE_DATE
	,PROCEDURE_DATETIME
	-- ,PROCEDURE_TYPE_CONCEPT_ID
	,MODIFIER_CONCEPT_ID
	,QUANTITY
	-- ,PROVIDER_ID
	,VISIT_OCCURRENCE_ID
	-- ,PROCEDURE_SOURCE_VALUE
	-- ,PROCEDURE_SOURCE_CONCEPT_ID
	-- ,MODIFIER_SOURCE_VALUE
	,COUNT(*) AS CNT

FROM {{ref('PROCEDURE_OCCURRENCE_RAW')}} AS T1
WHERE T1.PROCEDURE_CONCEPT_ID <> 0
	AND T1.PROCEDURE_CONCEPT_ID IS NOT NULL
	AND T1.PERSON_ID <> 0
	AND T1.PERSON_ID IS NOT NULL
GROUP BY PERSON_ID
	,PROCEDURE_CONCEPT_ID
	-- ,PROCEDURE_DATE
	,PROCEDURE_DATETIME
	-- ,PROCEDURE_TYPE_CONCEPT_ID
	,MODIFIER_CONCEPT_ID
	,QUANTITY
	-- ,PROVIDER_ID
	,VISIT_OCCURRENCE_ID
	-- ,PROCEDURE_SOURCE_VALUE
	-- ,PROCEDURE_SOURCE_CONCEPT_ID
	-- ,MODIFIER_SOURCE_VALUE
HAVING COUNT(*) > 1
)

SELECT CAST(GETDATE() AS DATE) AS RUN_DATE
	, 'PROCEDURE_OCCURRENCE' AS STANDARD_DATA_TABLE
	, 'POSSIBLE_DUPLICATE' AS QA_METRIC
	, 'PROVIDER_ID'  AS METRIC_FIELD
	, COALESCE(SUM(CNT),0) AS QA_ERRORS
	, CASE WHEN SUM(CNT) IS NOT NULL THEN 'FOLLOW_UP' ELSE NULL END   AS ERROR_TYPE
	, (SELECT COUNT(*) AS NUM_ROWS FROM {{ref('PROCEDURE_OCCURRENCE_RAW')}}) AS TOTAL_RECORDS
	, (SELECT COUNT(*) AS NUM_ROWS FROM {{ref('PROCEDURE_OCCURRENCE')}}) AS TOTAL_RECORDS_CLEAN
FROM TMP_DUPES

