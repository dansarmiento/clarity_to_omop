------ QA_MEASUREMENT_ZEROCONCEPT_COUNT
---------------------------------------------------------------------

{# --{{ config(materialized = 'view') }} #}

WITH ZEROCONCEPT_COUNT
AS (
	SELECT 'MEASUREMENT_CONCEPT_ID' AS METRIC_FIELD, 'ZERO CONCEPT' AS QA_METRIC, 'WARNING' AS ERROR_TYPE, COUNT(*) AS CNT
	FROM {{ref('MEASUREMENT_RAW')}} AS MEASUREMENT
	WHERE (MEASUREMENT_CONCEPT_ID = 0)

	UNION ALL

	SELECT 'OPERATOR_CONCEPT_ID' AS METRIC_FIELD, 'ZERO CONCEPT' AS QA_METRIC, 'WARNING' AS ERROR_TYPE, COUNT(*) AS CNT
	FROM {{ref('MEASUREMENT_RAW')}} AS MEASUREMENT
	WHERE (OPERATOR_CONCEPT_ID = 0)

	-- UNION ALL

--VALUE_AS_CONCEPT_ID
    --IF THERE *IS* A VALUE IN 'VALUE_AS_NUMBER' THERE SHOULD BE A ZERO IN 'VALUE_AS_CONCEPT_ID'
    -- SELECT 'VALUE_AS_CONCEPT_ID' AS METRIC_FIELD, 'ZERO CONCEPT' AS QA_METRIC, 'EXPECTED' AS ERROR_TYPE, COUNT(*) AS CNT
    -- FROM {{ref('MEASUREMENT_RAW')}} AS MEASUREMENT
    -- WHERE (VALUE_AS_NUMBER IS NOT NULL AND VALUE_AS_CONCEPT_ID <> 0 )

	-- UNION ALL

	--IF THERE IS *NOT* A VALUE IN 'VALUE_AS_NUMBER' THERE SHOULD BE A NON-ZERO IN 'VALUE_AS_CONCEPT_ID'
	-- SELECT 'VALUE_AS_CONCEPT_ID' AS METRIC_FIELD, 'ZERO CONCEPT' AS QA_METRIC, 'WARNING' AS ERROR_TYPE, COUNT(*) AS CNT
	-- FROM {{ref('MEASUREMENT_RAW')}} AS MEASUREMENT
	-- WHERE (VALUE_AS_NUMBER IS NULL AND VALUE_AS_CONCEPT_ID = 0)

	-- UNION ALL

--UNIT_CONCEPT_ID
	--IF THERE IS A VALUE IN 'UNIT_SOURCE_VALUE' THERE SHOULD NOT BE A ZERO IN 'UNIT_CONCEPT_ID'
	-- SELECT 'UNIT_CONCEPT_ID' AS METRIC_FIELD, 'ZERO CONCEPT' AS QA_METRIC, 'WARNING' AS ERROR_TYPE, COUNT(*) AS CNT
	-- FROM {{ref('MEASUREMENT_RAW')}} AS MEASUREMENT
	-- WHERE (UNIT_CONCEPT_ID = 0 AND UNIT_SOURCE_VALUE IS NOT NULL)

	-- UNION ALL

	-- --IF THERE IS NOT A VALUE IN 'UNIT_SOURCE_VALUE' THERE SHOULD BE A ZERO IN 'UNIT_CONCEPT_ID'
	-- SELECT 'UNIT_CONCEPT_ID' AS METRIC_FIELD, 'ZERO CONCEPT' AS QA_METRIC, 'EXPECTED' AS ERROR_TYPE, COUNT(*) AS CNT
	-- FROM {{ref('MEASUREMENT_RAW')}} AS MEASUREMENT
	-- WHERE (UNIT_CONCEPT_ID = 0 AND UNIT_SOURCE_VALUE IS NULL)

	-- UNION ALL

	-- SELECT 'MEASUREMENT_SOURCE_CONCEPT_ID' AS METRIC_FIELD, 'ZERO CONCEPT' AS QA_METRIC, 'EXPECTED' AS ERROR_TYPE, COUNT(*) AS CNT
	-- FROM {{ref('MEASUREMENT_RAW')}} AS MEASUREMENT
	-- WHERE (MEASUREMENT_SOURCE_CONCEPT_ID = 0)
)

SELECT CAST(GETDATE() AS DATE) AS RUN_DATE
	,'MEASUREMENT' AS STANDARD_DATA_TABLE
	, QA_METRIC AS QA_METRIC
	, METRIC_FIELD  AS METRIC_FIELD
	, COALESCE(SUM(CNT),0) AS QA_ERRORS
	, CASE WHEN SUM(CNT) <> 0 THEN ERROR_TYPE ELSE NULL END   AS ERROR_TYPE
	, (SELECT COUNT(*) AS NUM_ROWS FROM {{ref('MEASUREMENT_RAW')}}) AS TOTAL_RECORDS
	, (SELECT COUNT(*) AS NUM_ROWS FROM {{ref('MEASUREMENT')}}) AS TOTAL_RECORDS_CLEAN
FROM ZEROCONCEPT_COUNT
GROUP BY METRIC_FIELD, QA_METRIC, ERROR_TYPE
