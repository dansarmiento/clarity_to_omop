/*
DRUG_EXPOSURE_NONSTANDARD_COUNT
This query identifies non-standard concept IDs in the DRUG_EXPOSURE table
*/

WITH NONSTANDARD_COUNT AS (
    -- Check for non-standard DRUG_CONCEPT_IDs
    SELECT 
        'DRUG_CONCEPT_ID' AS METRIC_FIELD,
        'NON-STANDARD' AS QA_METRIC, 
        'INVALID DATA' AS ERROR_TYPE,
        COUNT(*) AS CNT
    FROM CARE_RES_OMOP_DEV2_WKSP.OMOP.DRUG_EXPOSURE_RAW AS DE
    LEFT JOIN CARE_RES_OMOP_GEN_WKSP.OMOP.CONCEPT AS C
        ON DE.DRUG_CONCEPT_ID = C.CONCEPT_ID 
        AND UPPER(C.DOMAIN_ID) = 'DRUG' 
        AND UPPER(C.VOCABULARY_ID) IN ('RXNORM', 'CVX')
    WHERE DRUG_CONCEPT_ID <> 0 
        AND DRUG_CONCEPT_ID IS NOT NULL 
        AND (STANDARD_CONCEPT <> 'S' OR STANDARD_CONCEPT IS NULL)

    UNION ALL

    -- Check for non-standard DRUG_TYPE_CONCEPT_IDs 
    SELECT 
        'DRUG_TYPE_CONCEPT_ID' AS METRIC_FIELD,
        'NON-STANDARD' AS QA_METRIC,
        'INVALID DATA' AS ERROR_TYPE,
        COUNT(*) AS CNT
    FROM CARE_RES_OMOP_DEV2_WKSP.OMOP.DRUG_EXPOSURE_RAW AS DE
    LEFT JOIN CARE_RES_OMOP_GEN_WKSP.OMOP.CONCEPT AS C
        ON DE.DRUG_TYPE_CONCEPT_ID = C.CONCEPT_ID
        AND UPPER(C.DOMAIN_ID) = 'TYPE CONCEPT'
        AND UPPER(C.VOCABULARY_ID) = 'TYPE CONCEPT'
    WHERE DRUG_TYPE_CONCEPT_ID <> 0
        AND DRUG_TYPE_CONCEPT_ID IS NOT NULL
        AND (STANDARD_CONCEPT <> 'S' OR STANDARD_CONCEPT IS NULL)

    UNION ALL

    -- Check for non-standard ROUTE_CONCEPT_IDs
    SELECT 
        'ROUTE_CONCEPT_ID' AS METRIC_FIELD,
        'NON-STANDARD' AS QA_METRIC,
        'INVALID DATA' AS ERROR_TYPE,
        COUNT(*) AS CNT
    FROM CARE_RES_OMOP_DEV2_WKSP.OMOP.DRUG_EXPOSURE_RAW AS DE
    LEFT JOIN CARE_RES_OMOP_GEN_WKSP.OMOP.CONCEPT AS C
        ON DE.ROUTE_CONCEPT_ID = C.CONCEPT_ID
        AND UPPER(C.DOMAIN_ID) = 'ROUTE'
        AND UPPER(C.VOCABULARY_ID) = 'SNOMED'
    WHERE ROUTE_CONCEPT_ID <> 0
        AND ROUTE_CONCEPT_ID IS NOT NULL
        AND (STANDARD_CONCEPT <> 'S' OR STANDARD_CONCEPT IS NULL)

    UNION ALL

    -- Check for non-standard DRUG_SOURCE_CONCEPT_IDs
    SELECT 
        'DRUG_SOURCE_CONCEPT_ID' AS METRIC_FIELD,
        'NON-STANDARD' AS QA_METRIC,
        'INVALID DATA' AS ERROR_TYPE,
        COUNT(*) AS CNT
    FROM CARE_RES_OMOP_DEV2_WKSP.OMOP.DRUG_EXPOSURE_RAW AS DE
    LEFT JOIN CARE_RES_OMOP_GEN_WKSP.OMOP.CONCEPT AS C
        ON DE.DRUG_SOURCE_CONCEPT_ID = C.CONCEPT_ID
        AND UPPER(C.DOMAIN_ID) = 'DRUG'
        AND UPPER(C.VOCABULARY_ID) IN ('RXNORM', 'CVX')
    WHERE DRUG_SOURCE_CONCEPT_ID <> 0 
        AND C.CONCEPT_ID IS NULL
)

SELECT
    CAST(GETDATE() AS DATE) AS RUN_DATE,
    'DRUG_EXPOSURE' AS STANDARD_DATA_TABLE,
    QA_METRIC AS QA_METRIC,
    METRIC_FIELD AS METRIC_FIELD,
    COALESCE(SUM(CNT), 0) AS QA_ERRORS,
    CASE WHEN SUM(CNT) <> 0 THEN ERROR_TYPE ELSE NULL END AS ERROR_TYPE,
    (SELECT COUNT(*) FROM CARE_RES_OMOP_DEV2_WKSP.OMOP.DRUG_EXPOSURE_RAW) AS TOTAL_RECORDS,
    (SELECT COUNT(*) FROM CARE_RES_OMOP_DEV2_WKSP.OMOP.DRUG_EXPOSURE) AS TOTAL_RECORDS_CLEAN
FROM NONSTANDARD_COUNT
GROUP BY METRIC_FIELD, QA_METRIC, ERROR_TYPE;

/*
Column Descriptions:
- RUN_DATE: Date the QA check was performed
- STANDARD_DATA_TABLE: Name of the table being checked
- QA_METRIC: Type of QA check performed
- METRIC_FIELD: Field being validated
- QA_ERRORS: Count of records failing validation
- ERROR_TYPE: Description of the validation error
- TOTAL_RECORDS: Total count of records in raw table
- TOTAL_RECORDS_CLEAN: Total count of records in clean table

Logic:
1. Checks DRUG_CONCEPT_ID values against standard RxNorm/CVX concepts
2. Validates DRUG_TYPE_CONCEPT_ID against standard Type Concepts
3. Confirms ROUTE_CONCEPT_ID uses standard SNOMED concepts
4. Verifies DRUG_SOURCE_CONCEPT_ID maps to valid drug concepts
5. Aggregates results with error counts and totals

LEGAL DISCLAIMER:
This code is provided "AS IS" without warranty of any kind.
The entire risk as to the quality and performance of the code is with you.
Should the code prove defective, you assume the cost of all necessary
servicing, repair or correction.
*/