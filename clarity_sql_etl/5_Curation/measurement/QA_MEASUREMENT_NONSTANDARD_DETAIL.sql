/*******************************************************************
* QA_MEASUREMENT_NONSTANDARD_DETAIL
* Identifies non-standard concept IDs in the MEASUREMENT table
*******************************************************************/

WITH NONSTANDARD_DETAIL AS (
    -- Check MEASUREMENT_CONCEPT_ID
    SELECT 
        'MEASUREMENT_CONCEPT_ID' AS METRIC_FIELD,
        'NON-STANDARD' AS QA_METRIC, 
        'INVALID DATA' AS ERROR_TYPE,
        MEASUREMENT_ID AS CDT_ID
    FROM CARE_RES_OMOP_DEV2_WKSP.OMOP.MEASUREMENT_RAW AS M
    LEFT JOIN CARE_RES_OMOP_GEN_WKSP.OMOP.CONCEPT AS C
        ON M.MEASUREMENT_CONCEPT_ID = C.CONCEPT_ID 
        AND upper(C.DOMAIN_ID) = 'MEASUREMENT'
        AND upper(C.VOCABULARY_ID) IN ('LOINC', 'SNOMED', 'CPT4')
    WHERE MEASUREMENT_CONCEPT_ID <> 0 
        AND MEASUREMENT_CONCEPT_ID IS NOT NULL 
        AND (STANDARD_CONCEPT <> 'S' OR STANDARD_CONCEPT IS NULL)

    UNION ALL

    -- Check MEASUREMENT_TYPE_CONCEPT_ID  
    SELECT 
        'MEASUREMENT_TYPE_CONCEPT_ID' AS METRIC_FIELD,
        'NON-STANDARD' AS QA_METRIC,
        'INVALID DATA' AS ERROR_TYPE,
        MEASUREMENT_ID AS CDT_ID
    FROM CARE_RES_OMOP_DEV2_WKSP.OMOP.MEASUREMENT_RAW AS M
    LEFT JOIN CARE_RES_OMOP_GEN_WKSP.OMOP.CONCEPT AS C
        ON M.MEASUREMENT_TYPE_CONCEPT_ID = C.CONCEPT_ID
        AND upper(C.DOMAIN_ID) = 'TYPE CONCEPT'
        AND upper(C.VOCABULARY_ID) IN ('TYPE CONCEPT')
    WHERE MEASUREMENT_TYPE_CONCEPT_ID <> 0
        AND MEASUREMENT_TYPE_CONCEPT_ID IS NOT NULL
        AND (STANDARD_CONCEPT <> 'S' OR STANDARD_CONCEPT IS NULL)

    UNION ALL

    -- Check OPERATOR_CONCEPT_ID
    SELECT 
        'OPERATOR_CONCEPT_ID' AS METRIC_FIELD,
        'NON-STANDARD' AS QA_METRIC,
        'INVALID DATA' AS ERROR_TYPE,
        MEASUREMENT_ID AS CDT_ID
    FROM CARE_RES_OMOP_DEV2_WKSP.OMOP.MEASUREMENT_RAW AS M
    LEFT JOIN CARE_RES_OMOP_GEN_WKSP.OMOP.CONCEPT AS C
        ON M.OPERATOR_CONCEPT_ID = C.CONCEPT_ID
        AND upper(C.DOMAIN_ID) = 'MEAS VALUE OPERATOR'
    WHERE OPERATOR_CONCEPT_ID <> 0
        AND OPERATOR_CONCEPT_ID IS NOT NULL
        AND (STANDARD_CONCEPT <> 'S' OR STANDARD_CONCEPT IS NULL)

    UNION ALL

    -- Check VALUE_AS_CONCEPT_ID
    SELECT 
        'VALUE_AS_CONCEPT_ID' AS METRIC_FIELD,
        'NON-STANDARD' AS QA_METRIC,
        'INVALID DATA' AS ERROR_TYPE,
        MEASUREMENT_ID AS CDT_ID
    FROM CARE_RES_OMOP_DEV2_WKSP.OMOP.MEASUREMENT_RAW AS M
    LEFT JOIN CARE_RES_OMOP_GEN_WKSP.OMOP.CONCEPT AS C
        ON M.VALUE_AS_CONCEPT_ID = C.CONCEPT_ID
        AND upper(C.DOMAIN_ID) IN ('MEAS VALUE', 'OBSERVATION')
        AND upper(C.VOCABULARY_ID) IN ('LOINC', 'SNOMED')
    WHERE VALUE_AS_CONCEPT_ID <> 0
        AND VALUE_AS_CONCEPT_ID IS NOT NULL
        AND (STANDARD_CONCEPT <> 'S' OR STANDARD_CONCEPT IS NULL)

    UNION ALL

    -- Check COVID Mapping
    SELECT 
        'VALUE_AS_CONCEPT_ID' AS METRIC_FIELD,
        'COVID_MAPPING' AS QA_METRIC,
        'INVALID DATA' AS ERROR_TYPE,
        MEASUREMENT_ID AS CDT_ID
    FROM CARE_RES_OMOP_DEV2_WKSP.OMOP.MEASUREMENT_RAW AS M
    JOIN CARE_RES_OMOP_GEN_WKSP.OMOP.CONCEPT_ANCESTOR AS CA 
        ON M.MEASUREMENT_CONCEPT_ID = CA.DESCENDANT_CONCEPT_ID
    WHERE CA.ANCESTOR_CONCEPT_ID = 756055
        AND (M.VALUE_AS_CONCEPT_ID IS NULL OR M.VALUE_AS_CONCEPT_ID = 0)

    UNION ALL

    -- Check UNIT_CONCEPT_ID
    SELECT 
        'UNIT_CONCEPT_ID' AS METRIC_FIELD,
        'NON-STANDARD' AS QA_METRIC,
        'INVALID DATA' AS ERROR_TYPE,
        MEASUREMENT_ID AS CDT_ID
    FROM CARE_RES_OMOP_DEV2_WKSP.OMOP.MEASUREMENT_RAW AS M
    LEFT JOIN CARE_RES_OMOP_GEN_WKSP.OMOP.CONCEPT AS C
        ON M.UNIT_CONCEPT_ID = C.CONCEPT_ID
        AND upper(C.DOMAIN_ID) = 'UNIT'
    WHERE UNIT_CONCEPT_ID <> 0
        AND UNIT_CONCEPT_ID IS NOT NULL
        AND (STANDARD_CONCEPT <> 'S' OR STANDARD_CONCEPT IS NULL)

    UNION ALL

    -- Check MEASUREMENT_SOURCE_CONCEPT_ID
    SELECT 
        'MEASUREMENT_SOURCE_CONCEPT_ID' AS METRIC_FIELD,
        'NON-STANDARD' AS QA_METRIC,
        'INVALID DATA' AS ERROR_TYPE,
        MEASUREMENT_ID AS CDT_ID
    FROM CARE_RES_OMOP_DEV2_WKSP.OMOP.MEASUREMENT_RAW AS M
    LEFT JOIN CARE_RES_OMOP_GEN_WKSP.OMOP.CONCEPT AS C
        ON M.MEASUREMENT_SOURCE_CONCEPT_ID = C.CONCEPT_ID
        AND upper(C.DOMAIN_ID) = 'MEASUREMENT'
        AND upper(C.VOCABULARY_ID) IN ('LOINC', 'SNOMED')
    WHERE MEASUREMENT_SOURCE_CONCEPT_ID <> 0
        AND C.CONCEPT_ID IS NULL
)

SELECT 
    CAST(GETDATE() AS DATE) AS RUN_DATE,
    'MEASUREMENT' AS STANDARD_DATA_TABLE,
    QA_METRIC AS QA_METRIC,
    METRIC_FIELD AS METRIC_FIELD,
    ERROR_TYPE,
    CDT_ID
FROM NONSTANDARD_DETAIL
WHERE ERROR_TYPE <> 'EXPECTED';

/*******************************************************************
* Column Descriptions:
* RUN_DATE - Date the QA check was executed
* STANDARD_DATA_TABLE - Name of the table being checked (MEASUREMENT)
* QA_METRIC - Type of QA check (NON-STANDARD or COVID_MAPPING)
* METRIC_FIELD - Field being validated
* ERROR_TYPE - Type of error found (INVALID DATA)
* CDT_ID - MEASUREMENT_ID of the record with the error

* Logic:
* 1. Checks each concept ID field in MEASUREMENT table to ensure standard concepts are used
* 2. Joins to CONCEPT table to validate domain, vocabulary and standard concept status
* 3. Special check for COVID measurements to ensure value concepts are populated
* 4. Returns records where non-standard or invalid concepts are found

LEGAL DISCLAIMER:
This code is provided "AS IS" without warranty of any kind.
The entire risk as to the quality and performance of the code is with you.
Should the code prove defective, you assume the cost of all necessary
servicing, repair or correction.
*******************************************************************/