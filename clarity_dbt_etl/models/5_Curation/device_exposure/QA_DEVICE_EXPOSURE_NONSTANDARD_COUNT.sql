--QA_DEVICE_EXPOSURE_NONSTANDARD_COUNT
---------------------------------------------------------------------
WITH CTE_NON_STANDARD_COUNT AS (
    SELECT
        'DEVICE_EXPOSURE' AS STANDARD_DATA_TABLE
		, 'DEVICE_CONCEPT_ID' AS METRIC_FIELD
		, 'NON-STANDARD' AS QA_METRIC
		, 'INVALID DATA' AS ERROR_TYPE
		, COUNT(*) AS CNT
    FROM
       {{ref('DEVICE_EXPOSURE_RAW')}}  AS P
    LEFT JOIN
        {{ source('OMOP','CONCEPT')}} AS  C
        ON
            P.DEVICE_CONCEPT_ID=C.CONCEPT_ID AND upper(C.DOMAIN_ID) = 'DEVICE' AND upper(C.VOCABULARY_ID) =  'SNOMED'
	WHERE DEVICE_CONCEPT_ID <> 0 AND DEVICE_CONCEPT_ID IS NOT NULL
		AND (STANDARD_CONCEPT <> 'S' OR STANDARD_CONCEPT IS NULL)
UNION ALL
    SELECT
        'DEVICE_EXPOSURE' AS STANDARD_DATA_TABLE
		, 'DEVICE_TYPE_CONCEPT_ID' AS METRIC_FIELD
		, 'NON-STANDARD' AS QA_METRIC
		, 'INVALID DATA' AS ERROR_TYPE
		, COUNT(*) AS CNT
    FROM
       {{ref('DEVICE_EXPOSURE_RAW')}} AS P
    LEFT JOIN
        {{ source('OMOP','CONCEPT')}} AS  C
        ON
            P.DEVICE_TYPE_CONCEPT_ID=C.CONCEPT_ID AND upper(C.DOMAIN_ID) = 'TYPE CONCEPT' AND upper(C.CONCEPT_CLASS_ID) =  'TYPE CONCEPT'
	WHERE DEVICE_TYPE_CONCEPT_ID <> 0 AND DEVICE_TYPE_CONCEPT_ID IS NOT NULL
		AND (STANDARD_CONCEPT <> 'S' OR STANDARD_CONCEPT IS NULL)
UNION ALL
    SELECT
        'DEVICE_EXPOSURE' AS STANDARD_DATA_TABLE
		, 'DEVICE_SOURCE_CONCEPT_ID' AS METRIC_FIELD
		, 'NON-STANDARD' AS QA_METRIC
		, 'INVALID DATA' AS ERROR_TYPE
		, COUNT(*) AS CNT
    FROM
       {{ref('DEVICE_EXPOSURE_RAW')}} AS P
    LEFT JOIN
        {{ source('OMOP','CONCEPT')}} AS  C
        ON
            P.DEVICE_SOURCE_CONCEPT_ID=C.CONCEPT_ID AND upper(C.DOMAIN_ID) = 'DEVICE' AND upper(C.VOCABULARY_ID) =  'SNOMED'
	WHERE DEVICE_SOURCE_CONCEPT_ID <> 0 AND DEVICE_SOURCE_CONCEPT_ID IS NOT NULL
		AND (C.CONCEPT_ID IS NOT NULL)
)

SELECT CAST(GETDATE() AS DATE) AS RUN_DATE
	, STANDARD_DATA_TABLE
	, QA_METRIC AS QA_METRIC
	, METRIC_FIELD  AS METRIC_FIELD
	, COALESCE(SUM(CNT),0) AS QA_ERRORS
	, CASE WHEN SUM(CNT) <> 0 THEN ERROR_TYPE ELSE NULL END   AS ERROR_TYPE
	,(SELECT COUNT(*) AS NUM_ROWS FROM {{ref('DEVICE_EXPOSURE_RAW')}}) AS TOTAL_RECORDS
	,(SELECT COUNT(*) AS NUM_ROWS FROM {{ref('DEVICE_EXPOSURE')}}) AS TOTAL_RECORDS_CLEAN
FROM CTE_NON_STANDARD_COUNT
GROUP BY   STANDARD_DATA_TABLE, METRIC_FIELD, QA_METRIC, ERROR_TYPE
