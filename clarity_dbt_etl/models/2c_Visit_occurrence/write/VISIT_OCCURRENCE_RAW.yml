version: 2

models:
  - name: VISIT_OCCURRENCE
    description: The VISIT_OCCURRENCE table contains Events where Persons engage with the healthcare system for a duration of time.
    columns:
      - name: VISIT_OCCURRENCE_ID
        description: Use this to identify unique interactions between a person and the health care system. This identifier links across the other CDM event tables to associate events with a visit; This should be populated by creating a unique identifier for each unique interaction between a person and the healthcare system where the person receives a medical good or service over a span of time.
        tests:
          - unique
          - not_null

      - name: PERSON_ID
        tests:
          - not_null
          - relationships:
              to: ref('PERSON_RAW')
              field: PERSON_ID

      - name: VISIT_CONCEPT_ID
        description: This field contains a concept id representing the kind of visit, like inpatient or outpatient. All concepts in this field should be standard and belong to the Visit domain; Populate this field based on the kind of visit that took place for the person. For example this could be “Inpatient Visit”, “Outpatient Visit”, “Ambulatory Visit”, etc. This table will contain standard concepts in the Visit domain. These concepts are arranged in a hierarchical structure to facilitate cohort definitions by rolling up to generally familiar Visits adopted in most healthcare systems worldwide.
        tests:
          - not_null
          - relationships:
              to: source('OMOP','CONCEPT')
              field: CONCEPT_ID

      - name: visit_start_date
        description: For inpatient visits, the start date is typically the admission date. For outpatient visits the start date and end date will be the same; When populating VISIT_START_DATE, you should think about the patient experience to make decisions on how to define visits. In the case of an inpatient visit this should be the date the patient was admitted to the hospital or institution. In all other cases this should be the date of the patient-provider interaction.
        tests:
          - not_null

      - name: visit_start_datetime
        description: If no time is given for the start date of a visit, set it to midnight (00:00:0000).

      - name: visit_end_date
        description: For inpatient visits the end date is typically the discharge date; Visit end dates are mandatory. If end dates are not provided in the source there are three ways in which to derive them - Outpatient Visit- visit_end_datetime = visit_start_datetime - Emergency Room Visit- visit_end_datetime = visit_start_datetime - Inpatient Visit- Usually there is information about discharge. If not, you should be able to derive the end date from the sudden decline of activity or from the absence of inpatient procedures/drugs. - Non-hospital institution Visits - Particularly for claims data, if end dates are not provided assume the visit is for the duration of month that it occurs. For Inpatient Visits ongoing at the date of ETL, put date of processing the data into visit_end_datetime and visit_type_concept_id with 32220 “Still patient” to identify the visit as incomplete. - All other Visits - visit_end_datetime = visit_start_datetime. If this is a one-day visit the end date should match the start date.
        tests:
          - not_null

      - name: visit_end_datetime
        description: If no time is given for the end date of a visit, set it to midnight (00:00:0000).

      - name: VISIT_TYPE_CONCEPT_ID
        description: Use this field to understand the provenance of the visit record, or where the record comes from; Populate this field based on the provenance of the visit record, as in whether it came from an EHR record or billing claim.
        tests:
          - not_null
          - relationships:
              to: source('OMOP','CONCEPT')
              field: CONCEPT_ID

      - name: PROVIDER_ID
        description: There will only be one provider per visit record and the ETL document should clearly state how they were chosen (attending, admitting, etc.). If there are multiple providers associated with a visit in the source, this can be reflected in the event tables (CONDITION_OCCURRENCE, PROCEDURE_OCCURRENCE, etc.) or in the VISIT_DETAIL table; If there are multiple providers associated with a visit, you will need to choose which one to put here. The additional providers can be stored in the VISIT_DETAIL table.
        tests:
          # - not_null:
          #     config:
          #       severity: warn
          - relationships:
              to: ref('PROVIDER_RAW')
              field: PROVIDER_ID

      - name: CARE_SITE_ID
        description: This field provides information about the Care Site where the Visit took place; There should only be one Care Site associated with a Visit.
        tests:
          # - not_null:
          #     config:
          #       severity: warn
          - relationships:
              to: ref('CARE_SITE')
              field: CARE_SITE_ID
              severity: warn

      - name: visit_source_value
        description: This field houses the verbatim value from the source data representing the kind of visit that took place (inpatient, outpatient, emergency, etc.); If there is information about the kind of visit in the source data that value should be stored here. If a visit is an amalgamation of visits from the source then use a hierarchy to choose the visit source value, such as IP -> ER-> OP. This should line up with the logic chosen to determine how visits are created.

      - name: VISIT_SOURCE_CONCEPT_ID
        description: Not Applicable - Value:0 (If the visit source value is coded in the source data using an OMOP supported vocabulary put the concept id representing the source value here.)
        tests:
          - relationships:
              to: source('OMOP','CONCEPT')
              field: CONCEPT_ID

      - name: ADMITTED_FROM_CONCEPT_ID
        description: Not Applicable - Value:0 (Use this field to determine where the patient was admitted from. This concept is part of the visit domain and can indicate if a patient was admitted to the hospital from a long-term care facility, for example; If available, map the ADMITTED_FROM_SOURCE_VALUE to a standard concept in the visit domain.)
        tests:
          - relationships:
              to: source('OMOP','CONCEPT')
              field: CONCEPT_ID

      - name: ADMITTED_FROM_SOURCE_VALUE
        description: This information may be called something different in the source data but the field is meant to contain a value indicating where a person was admitted from. Typically this applies only to visits that have a length of stay, like inpatient visits or long-term care visits.

      - name: DISCHARGED_TO_CONCEPT_ID
        description: Not Applicable - Value:0 (Use this field to determine where the patient was discharged to after a visit. This concept is part of the visit domain and can indicate if a patient was discharged to home or sent to a long-term care facility, for example; If available, map the DISCHARGED_TO_SOURCE_VALUE to a standard concept in the visit domain.)
        tests:
          - relationships:
              to: source('OMOP','CONCEPT')
              field: CONCEPT_ID

      - name: DISCHARGED_TO_SOURCE_VALUE
        description: This information may be called something different in the source data but the field is meant to contain a value indicating where a person was discharged to after a visit, as in they went home or were moved to long-term care. Typically this applies only to visits that have a length of stay of a day or more.

      - name: preceding_visit_occurrence_id
        description: Use this field to find the visit that occurred for the person prior to the given visit. There could be a few days or a few years in between;
