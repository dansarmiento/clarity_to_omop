{{ config(materialized = 'table', schema = 'OMOP_PULL') }}
--PULL_MEASUREMENT_HOSP_FLOWSHEET

SELECT
-- ***STAGE ATTRIBUTES***
-- fields used for the Stage
    PULL_VISIT_OCCURRENCE_HSP.PERSON_ID          AS PERSON_ID
	,IP_FLWSHT_MEAS.RECORDED_TIME::DATE                 AS MEASUREMENT_DATE
	,IP_FLWSHT_MEAS.RECORDED_TIME                       AS MEASUREMENT_DATETIME
	,CASE
		WHEN IP_FLWSHT_MEAS.MEAS_VALUE LIKE '>=%'
			THEN 4171755
		WHEN IP_FLWSHT_MEAS.MEAS_VALUE LIKE '<=%'
			THEN 4171754
		WHEN IP_FLWSHT_MEAS.MEAS_VALUE LIKE '<%'
			THEN 4171756
		WHEN IP_FLWSHT_MEAS.MEAS_VALUE LIKE '>%'
			THEN 4172704
		ELSE 4172703
		END                                             AS OPERATOR_CONCEPT_ID
	,REPLACE(REPLACE(REPLACE(IP_FLWSHT_MEAS.MEAS_VALUE, '=', ''), '<', ''), '>', '') AS VALUE_AS_NUMBER
	,IP_FLO_GP_DATA.MINVALUE                            AS RANGE_LOW
	,IP_FLO_GP_DATA.MAX_VAL                             AS RANGE_HIGH
	-- ,IP_FLO_GP_DATA.FLO_MEAS_ID::VARCHAR
	-- 	|| ':' || IP_FLO_GP_DATA.FLO_MEAS_NAME          AS MEASUREMENT_SOURCE_VALUE
    ,IP_FLO_GP_DATA.UNITS                               AS UNIT_SOURCE_VALUE
	,IP_FLWSHT_MEAS.MEAS_VALUE                          AS VALUE_SOURCE_VALUE

    -- ,IP_FLO_GP_DATA.FLO_MEAS_ID                        AS FLOWSHEET_MEAS_CODE
    ,PULL_PROVIDER_SOURCE_VALUE                         AS  PROVIDER_SOURCE_VALUE

-- ***ADDITIONAL ATTRIBUTES***
-- Non_OMOP fields used for the Stage
	,PULL_VISIT_OCCURRENCE_HSP.PULL_CSN_ID 	             AS PULL_CSN_ID
    ,IP_FLO_GP_DATA.FLO_MEAS_ID                          AS PULL_FLO_MEAS_ID
	,IP_FLO_GP_DATA.FLO_MEAS_NAME                        AS PULL_FLO_MEAS_NAME


-- ***SOURCE ATTRIBUTES***
-- field names pulled from the source for verification purposes. May be duplicated above.

--     ,IP_FLWSHT_MEAS.RECORDED_TIME
--     ,IP_FLWSHT_MEAS.MEAS_VALUE
--     ,IP_FLO_GP_DATA.MINVALUE
--     ,IP_FLO_GP_DATA.MAX_VAL
--     ,IP_FLO_GP_DATA.FLO_MEAS_ID
--     ,IP_FLO_GP_DATA.FLO_MEAS_NAME
-- --    ,IP_FLO_GP_DATA.VAL_TYPE_C
--     ,ZC_VAL_TYPE_NAME
--     ,IP_FLO_GP_DATA.UNITS
-- --    ,IP_FLO_GP_DATA.DISP_NAME
--     ,PULL_VISIT_OCCURRENCE_HSP.PAT_ID
--     ,PULL_VISIT_OCCURRENCE_HSP.PAT_ENC_CSN_ID
--     ,IP_DATA_STORE.EPT_CSN
--     ,IP_DATA_STORE.INPATIENT_DATA_ID
--     ,IP_FLWSHT_REC.FSD_ID
--   --  ,PULL_VISIT_OCCURRENCE_HSP.BILL_ATTEND_PROV_ID /*commenting out because it is causing duplicates */
--    -- , HSP_ACCOUNT.ATTENDING_PROV_ID /*commenting out because it is causing duplicates */
--    -- , HSP_ACCOUNT.REFERRING_PROV_ID /*commenting out because it is causing duplicates */
--     , HSP_ACCOUNT.ADM_DATE_TIME
--     , HSP_ACCOUNT.DISCH_DATE_TIME
--    -- ,ATTEND_FROM_DATE /*commenting out because it is causing duplicates */
--    -- ,ATTEND_TO_DATE /*commenting out because it is causing duplicates */
--   --  ,HSP_ATND_PROV.PROV_ID /*commenting out because it is causing duplicates */
--     ,COALESCE(PULL_VISIT_OCCURRENCE_HSP.ATTENDING_PROV_ID,HSP_ATND_PROV.PROV_ID) AS  CALC_ATTEND_PROV_ID
--     ,'PULL_MEASUREMENT--CLARITYHOSP--FLOWSHEET_ALL' AS ETL_MODULE

FROM {{ref('PULL_VISIT_OCCURRENCE_HSP')}} AS PULL_VISIT_OCCURRENCE_HSP

    LEFT JOIN {{ ref('IP_DATA_STORE_stg')}} AS IP_DATA_STORE
        ON  PULL_VISIT_OCCURRENCE_HSP.PULL_CSN_ID = IP_DATA_STORE.EPT_CSN

    LEFT JOIN {{ ref('IP_FLWSHT_REC_stg')}} AS IP_FLWSHT_REC
        ON IP_DATA_STORE.INPATIENT_DATA_ID = IP_FLWSHT_REC.INPATIENT_DATA_ID

    LEFT JOIN {{ ref('IP_FLWSHT_MEAS_stg')}} AS IP_FLWSHT_MEAS
        ON IP_FLWSHT_REC.FSD_ID = IP_FLWSHT_MEAS.FSD_ID

    INNER JOIN {{ ref('IP_FLO_GP_DATA_stg')}} AS IP_FLO_GP_DATA
        ON IP_FLWSHT_MEAS.FLO_MEAS_ID = IP_FLO_GP_DATA.FLO_MEAS_ID

    INNER JOIN {{ref('ZC_VAL_TYPE_stg')}} AS ZC_VAL_TYPE
        ON IP_FLO_GP_DATA.VAL_TYPE_C = ZC_VAL_TYPE.VAL_TYPE_C

    LEFT JOIN {{ ref('HSP_ACCOUNT_stg')}} AS HSP_ACCOUNT
        ON PULL_VISIT_OCCURRENCE_HSP.PULL_HSP_ACCOUNT_ID = HSP_ACCOUNT.HSP_ACCOUNT_ID

    LEFT JOIN {{ ref('HSP_ATND_PROV_stg')}} AS HSP_ATND_PROV
        ON  PULL_VISIT_OCCURRENCE_HSP.PULL_CSN_ID = HSP_ATND_PROV.PAT_ENC_CSN_ID
            AND IP_FLWSHT_MEAS.RECORDED_TIME BETWEEN ATTEND_FROM_DATE
                AND COALESCE(ATTEND_TO_DATE, GETDATE())




