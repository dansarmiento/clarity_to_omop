------QA_CONDITION_OCCURRENCE_NONSTANDARD_COUNT
---------------------------------------------------------------------

{# --{{ config(materialized = 'view') }} #}

WITH nonstandard_count
AS (
	SELECT 'CONDITION_CONCEPT_ID' AS METRIC_FIELD, 'NON-STANDARD' AS QA_METRIC, 'INVALID DATA' AS ERROR_TYPE, COUNT(*) AS CNT
	FROM {{ref('CONDITION_OCCURRENCE_RAW')}} AS CO
	LEFT JOIN {{ source('OMOP','CONCEPT')}} AS  C
		ON CO.CONDITION_CONCEPT_ID = C.CONCEPT_ID AND upper(C.DOMAIN_ID) = 'CONDITION' AND upper(C.VOCABULARY_ID) IN  ('SNOMED','OMOP EXTENSION')
	WHERE CONDITION_CONCEPT_ID <> 0 AND CONDITION_CONCEPT_ID IS NOT NULL AND (STANDARD_CONCEPT <> 'S' OR STANDARD_CONCEPT IS NULL)

	UNION ALL

	SELECT 'CONDITION_TYPE_CONCEPT_ID' AS METRIC_FIELD, 'NON-STANDARD' AS QA_METRIC, 'INVALID DATA' AS ERROR_TYPE, COUNT(*) AS CNT
	FROM {{ref('CONDITION_OCCURRENCE_RAW')}} CO
	LEFT JOIN {{ source('OMOP','CONCEPT')}} AS  C
		ON CO.CONDITION_TYPE_CONCEPT_ID = C.CONCEPT_ID AND upper(C.DOMAIN_ID) = 'TYPE CONCEPT' AND upper(C.CONCEPT_CLASS_ID) =  'TYPE CONCEPT'
	WHERE CONDITION_TYPE_CONCEPT_ID <> 0 AND CONDITION_TYPE_CONCEPT_ID IS NOT NULL AND (STANDARD_CONCEPT <> 'S' OR STANDARD_CONCEPT IS NULL)

	UNION ALL

	SELECT 'CONDITION_SOURCE_CONCEPT_ID' AS METRIC_FIELD, 'NON-STANDARD' AS QA_METRIC, 'INVALID DATA' AS ERROR_TYPE, COUNT(*) AS CNT
	FROM {{ref('CONDITION_OCCURRENCE_RAW')}} CO
	LEFT JOIN {{ source('OMOP','CONCEPT')}} AS  C
		ON CO.CONDITION_SOURCE_CONCEPT_ID = C.CONCEPT_ID AND upper(C.DOMAIN_ID) = 'CONDITION' AND C.CONCEPT_CLASS_ID IN ('ICD9CM','ICD10CM')
	WHERE CONDITION_SOURCE_CONCEPT_ID <> 0 AND CONDITION_SOURCE_CONCEPT_ID IS NOT NULL AND (C.CONCEPT_ID IS NOT NULL)

	UNION ALL

	SELECT 'CONDITION_STATUS_CONCEPT_ID' AS METRIC_FIELD, 'NON-STANDARD' AS QA_METRIC, 'INVALID DATA' AS ERROR_TYPE, COUNT(*) AS CNT
	FROM {{ref('CONDITION_OCCURRENCE_RAW')}} AS CO
	LEFT JOIN {{ source('OMOP','CONCEPT')}} AS C
		ON CO.CONDITION_STATUS_CONCEPT_ID = C.CONCEPT_ID AND upper(C.DOMAIN_ID) = 'CONDITION STATUS'
	WHERE CONDITION_STATUS_CONCEPT_ID <> 0 AND CONDITION_STATUS_CONCEPT_ID IS NOT NULL AND (STANDARD_CONCEPT <> 'S' OR STANDARD_CONCEPT IS NULL)
	)

SELECT CAST(GETDATE() AS DATE) AS RUN_DATE
	,'CONDITION_OCCURRENCE' AS STANDARD_DATA_TABLE
	, QA_METRIC AS QA_METRIC
	, METRIC_FIELD  AS METRIC_FIELD
	, COALESCE(SUM(CNT),0) AS QA_ERRORS
	, CASE WHEN SUM(CNT) <> 0 THEN ERROR_TYPE ELSE NULL END   AS ERROR_TYPE
	, (SELECT COUNT(*) AS NUM_ROWS FROM {{ref('CONDITION_OCCURRENCE_RAW')}}) AS TOTAL_RECORDS
	, (SELECT COUNT(*) AS NUM_ROWS FROM {{ref('CONDITION_OCCURRENCE')}}) AS TOTAL_RECORDS_CLEAN
FROM NONSTANDARD_COUNT
	GROUP BY   METRIC_FIELD, QA_METRIC, ERROR_TYPE

