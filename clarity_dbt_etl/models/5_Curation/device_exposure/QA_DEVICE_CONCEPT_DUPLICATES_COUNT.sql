--QA_DEVICE_CONCEPT_DUPLICATES_COUNT
---------------------------------------------------------------------
WITH TMP_DUPES AS (
SELECT PERSON_ID
	,DEVICE_CONCEPT_ID
	,DEVICE_EXPOSURE_START_DATE
	,DEVICE_EXPOSURE_START_DATETIME
	,DEVICE_EXPOSURE_END_DATE
	,DEVICE_EXPOSURE_END_DATETIME
	,DEVICE_TYPE_CONCEPT_ID
	,UNIQUE_DEVICE_ID
	,QUANTITY
	,PROVIDER_ID
	,VISIT_OCCURRENCE_ID
	,DEVICE_SOURCE_VALUE
	,DEVICE_SOURCE_CONCEPT_ID
	,COUNT(*) AS CNT

FROM {{ref('DEVICE_EXPOSURE_RAW')}} AS T1

WHERE T1.DEVICE_CONCEPT_ID != 0
	AND T1.DEVICE_CONCEPT_ID IS NOT NULL
	AND T1.PERSON_ID != 0
	AND T1.PERSON_ID IS NOT NULL

GROUP BY PERSON_ID
	,DEVICE_CONCEPT_ID
	,DEVICE_EXPOSURE_START_DATE
	,DEVICE_EXPOSURE_START_DATETIME
	,DEVICE_EXPOSURE_END_DATE
	,DEVICE_EXPOSURE_END_DATETIME
	,DEVICE_TYPE_CONCEPT_ID
	,UNIQUE_DEVICE_ID
	,QUANTITY
	,PROVIDER_ID
	,VISIT_OCCURRENCE_ID
	,DEVICE_SOURCE_VALUE
	,DEVICE_SOURCE_CONCEPT_ID
HAVING COUNT(*) > 1
)

SELECT CAST(GETDATE() AS DATE) AS RUN_DATE
	, 'DEVICE_EXPOSURE' AS STANDARD_DATA_TABLE
	, 'DUPLICATE' AS QA_METRIC
	, 'RECORDS'  AS METRIC_FIELD
	, COALESCE(SUM(CNT),0) AS QA_ERRORS
	, CASE WHEN SUM(CNT) IS NOT NULL THEN 'FATAL' ELSE NULL END   AS ERROR_TYPE
	, (SELECT COUNT(*) AS NUM_ROWS FROM {{ref('DEVICE_EXPOSURE_RAW')}}) AS TOTAL_RECORDS
	, (SELECT COUNT(*) AS NUM_ROWS FROM {{ref('DEVICE_EXPOSURE')}}) AS TOTAL_RECORDS_CLEAN
FROM TMP_DUPES
